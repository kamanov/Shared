dit
dir()
dir()
Concrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
Concrete
head(Concrete)
head(Concrete)
Concrete.data
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
library(corrplot)
corrplot(cor(сoncrete.data))
corrplot(cor(Concrete.data))
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#")
corrplot(cor(сoncrete.data))
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
corrplot(cor(сoncrete))
Superplasticizer и Age
xyplot(concrete$ConcreteCompressiveStrength ~ concrete$Superplasticizer)
xyplot(concrete$ConcreteCompressiveStrength ~ concrete$Superplasticizer)
library(lattice)
library(latticeExtra)
xyplot(concrete$ConcreteCompressiveStrength ~ concrete$Superplasticizer)
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
xyplot(concrete$ConcreteCompressiveStrength ~ concrete$Superplasticizer)
xyplot(сoncrete$ConcreteCompressiveStrength ~ сoncrete$Superplasticizer)
draw <-function(param) {
xyplot(сoncrete$ConcreteCompressiveStrength ~ param, panel=function(...) {
panel.xyplot(...)
panel.loess(...)
})
}
draw(сoncrete$Superplasticizer)
draw <-function(param) {
xyplot(сoncrete$ConcreteCompressiveStrength ~ param, panel=function(...) {
panel.loess(...)
})
}
draw(сoncrete$Superplasticizer)
View(Concrete)
plotmatrix(concrete)
library(ggplot2)
library(ggplot2)
plotmatrix(concrete)
ggpairs(concrete)
GGally::ggpairs(concrete)
corrplot(cor(сoncrete))
concrete[0]
concrete
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
сoncrete
сoncrete[0,1]
сoncrete[1,1]
сoncrete
сoncrete <- read.csv("Concrete_Data.csv", comment.char = "#")
concrete
head(сoncrete)
colnames(concrete)
colnames(сoncrete)
colnames(сoncrete)[1]
colnames(сoncrete)[-1]
colnames(сoncrete)[:-1]
a <- [1,2,3]
a <- 1:10
a
a[-10]
for (i in colnames(сoncrete)[-8]) {}
for (i in colnames(сoncrete)[-8]) { print(i)}
for (i in colnames(сoncrete)[-7]) { print(i)}
for (i in colnames(сoncrete)[1:7]) { print(i)}
for (i in colnames(сoncrete)[1:8]) { print(i)}
for (i in colnames(сoncrete)[1:9]) { print(i)}
for (i in colnames(сoncrete)[-9]) { print(i)}
concrete
concrete <- read.csv("Concrete_Data.csv", comment.char = "#", row.names = NULL)
concrete
concrete["Age"]
concrete[,"Age"]
concrete$Age
for (i in colnames(concrete)[-9]) { concrete[,i]}
for (i in colnames(concrete)[-9]) { a<-concrete[,i]}
a
concrete$"Age"
a <- "Age"
a
concrete$a
concrete$'a
q
q
''
z
`
`
''
draw <-function(param) {
xyplot(concrete$ConcreteCompressiveStrength ~ concrete[,param], panel=function(...) {
panel.xyplot(...)
panel.loess(...)
}, xlab = "param", ylab = "Strength")
}
draw("Age")
draw("Age")
for (i in colnames(concrete)[-9]) { draw(i) }
for (i in colnames(concrete)[1]) { draw(i) }
for (i in colnames(concrete)[1]) { draw(i) }
for (i in colnames(concrete)[1]) { print(i) }
for (i in colnames(concrete)[1]) { draw(i[o]) }
for (i in colnames(concrete)[1]) { draw(i[0]) }
colnames(concrete)[1]
colnames(concrete)[1][0]
draw(colnames(concrete)[1])
draw(colnames(concrete)[1])
draw(colnames(concrete)[1])
for (i in colnames(concrete)[1]) { draw(i) }
for (i in colnames(concrete)[1]) { draw(i); }
for (i in colnames(concrete)[1]) { i }
for (i in colnames(concrete)[1]) { print(i) }
for (i in colnames(concrete)) { draw(i) }
for (i in colnames(concrete)[1]) { draw(i) }
draw <-function(param) {
xyplot(concrete$ConcreteCompressiveStrength ~ concrete[,param], panel=function(...) {
panel.xyplot(...)
panel.loess(...)
}, xlab = "param", ylab = "Strength")
}
for (i in colnames(concrete)[-9]) { draw(i) }
for (i in 0:8) { draw(colnames(concrete)[i]) }
for (i in 0:8) { draw(colnames(concrete)[i]) }
colnames(concrete)[0]
colnames(concrete)[8]
colnames(concrete)[1]
for (i in 1:8) { draw(colnames(concrete)[i]) }
draw(colnames(concrete)[1])
draw(colnames(concrete)[1])
draw(colnames(concrete)[1])
draw <-function(param) {
xyplot(concrete$ConcreteCompressiveStrength ~ concrete[,param], panel=function(...) {
panel.xyplot(...)
panel.loess(...)
}, xlab = param, ylab = "Strength")
}
draw(colnames(concrete)[1])
Sys.sleep(0.5)
for (i in colnames(concrete)[-9]) { draw(i) Sys.sleep(0.5) }
for (i in colnames(concrete)[-9]) { draw(i)
Sys.sleep(0.5) }
corrplot(cor(concrete))
rm(concrete)
rm(concrete)
rm(Concrete)
View(`сoncrete`)
View(`сoncrete`)
View(`сoncrete`)
View(`сoncrete`)
rm(Concrete)
library(lattice)
my.bandplot.panel <- function(x, y, ...) {
bands <- function(x, y, upper, lower, fill, col, subscripts, ...) {
sx <- sort(x)
s  <- subscripts[order(x)]
upper <- upper[s]
lower <- lower[s]
panel.polygon(c(sx, rev(sx)), c(upper, rev(lower)),
col = fill, border = TRUE,
...)
}
panel.superpose(x, y, panel.groups = bands, type='l', col='gray',...)
panel.xyplot(x, y, type='b', cex=0.6, lty=1,...)
}
my.bandplot.prepanel <- function(x, y, upper, lower, subscripts, ...) {
r <- prepanel.default.xyplot(x, y, subscripts, ...)
r$ylim <- c(min(lower), max(upper))
r
}
my.bandplot <- function(formula, data, ...) {
xyplot(formula, data=data, panel=my.bandplot.panel, upper=data$upper, lower=data$lower, prepanel=my.bandplot.prepanel, ...)
}
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 2 * my.x + 5)
my.data$lower <- my.data$y - 0.5
my.data$upper <- my.data$y + 5
my.groups <- rbinom(my.count, 1,  0.5)
plot <- my.bandplot(y ~ x, data = my.data, groups = my.groups)
plot
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
upper <- upper[subscripts]
lower <- lower[subscripts]
panel.polygon(c(x, rev(x)), c(upper, rev(lower)),
col = fill, border = FALSE,
...)
}
my.bandplot <- function(formula, data, ...) {
xyplot(formula, data=data,
upper = data$high, lower = data$low,
panel = function(x, y, ...){
panel.superpose(x, y, panel.groups = my.panel.bands, type='l', col='gray',...)
panel.xyplot(x, y, type='b', cex=0.6, lty=1,...)
},
prepanel = function(x, y, upper, lower, subscripts, ...) {
d <- prepanel.default.xyplot(x, y, subscripts, ...)
d$ylim <- c(min(lower), max(upper))
d
},...
)
}
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 2 * my.x + 5)
my.data$lower <- my.data$y - 0.5
my.data$upper <- my.data$y + 5
my.groups <- rbinom(my.count, 1,  0.5)
plot <- my.bandplot(y ~ x, data = my.data, groups = my.groups)
plot
my.panel.bands <- function(x, y, upper, lower, fill, col,
subscripts, ..., font, fontface)
{
sx <- sort(x)
s  <- subscripts[order(x)]
upper <- upper[s]
lower <- lower[s]
panel.polygon(c(sx, rev(sx)), c(upper, rev(lower)),
col = fill, border = FALSE,
...)
}
my.bandplot <- function(formula, data, ...) {
xyplot(formula, data=data,
upper = data$high, lower = data$low,
panel = function(x, y, ...){
panel.superpose(x, y, panel.groups = my.panel.bands, type='l', col='gray',...)
panel.xyplot(x, y, type='b', cex=0.6, lty=1,...)
},
prepanel = function(x, y, upper, lower, subscripts, ...) {
d <- prepanel.default.xyplot(x, y, subscripts, ...)
d$ylim <- c(min(lower), max(upper))
d
},...
)
}
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 2 * my.x + 5)
my.data$lower <- my.data$y - 0.5
my.data$upper <- my.data$y + 5
my.groups <- rbinom(my.count, 1,  0.5)
plot <- my.bandplot(y ~ x, data = my.data, groups = my.groups)
plot
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 2 * my.x + 5)
my.data$low <- my.data$y - 0.5
my.data$high <- my.data$y + 5
my.groups <- rbinom(my.count, 1,  0.5)
plot <- my.bandplot(y ~ x, data = my.data, groups = my.groups)
plot
set.seed(1234)
df <- data.frame(x =1:10,
F =runif(10,1,2),
L =runif(10,0,1),
U =runif(10,2,3))
my.bandplot(df$F~df$x,df,high=df$U,low=df$L,groups=(df$x>0))
set.seed(1234)
df <- data.frame(x =1:10,
F =runif(10,1,2),
L =runif(10,0,1),
U =runif(10,2,3))
my.bandplot(df$F~df$x,df,high=df$U,low=df$L,groups=(df$x>0))
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 5 + 2 * my.x)
my.bandplot(y ~ x, data = my.data, upper = my.data$y + 5, lower = my.data$y - 1, groups = (x<0))
my.count <- 20
my.x <- rnorm(my.count)
my.data <- data.frame(x = my.x, y = 5 + 2 * my.x)
my.data$high <- my.data$y + 5
my.data$low <- my.data$y - 1
my.bandplot(y ~ x, data = my.data, groups = (x<0))
set.seed(0815)
x <- 1:10
F <- runif(10,1,2)
L <- runif(10,0,1)
U <- runif(10,2,3)
set.seed(0815)
x <- 1:10
F <- runif(10,1,2)
L <- runif(10,0,1)
U <- runif(10,2,3)
seeds <- read.table("seeds_dataset.txt")
names(seeds) <- c("Area", "Perimeter", "Compactness", "KernelLength", "KernelWidth", "Asymmetry", "GrooveLength", "Cultivar")
x <- 1:12
sample(x)
x[-9]
x[-3]
seeds[1]
seeds <- read.table("seeds_dataset.txt")
names(seeds) <- c("Area", "Perimeter", "Compactness", "KernelLength", "KernelWidth", "Asymmetry", "GrooveLength", "Variety")
seeds$Variety <- factor(seeds$Variety)
library(corrplot)
corrplot(cor(seeds))
corrplot.mixed(cor(seeds),tl.cex=0.8)
seeds <- read.table("seeds_dataset.txt")
names(seeds) <- c("Area", "Perimeter", "Compactness", "KernelLength", "KernelWidth", "Asymmetry", "GrooveLength", "Variety")
library(corrplot)
corrplot(cor(seeds))
View(seeds)
View(seeds)
x <- c(1,30,50)
x
x <-factor(x)
x
contrasts(x)
data(Smarket)
