names(data.movie)
data.movie <- read.csv("DataRegression.csv")
data.movie$Film <- NULL
data.movie$X <- NULL
names(data.movie)
names(data.movie)
data.movie$X.1 <- NULL
data.movie$X.2 <- NULL
data.movie$X <- NULL
names(data.movie)
head(data.movie)
, cor(cbind(a = runif(10), b = rep(1, 10)))
cor(cbind(a = runif(10), b = rep(1, 10)))
cor(data.movie)
?cor
cor(data.movie, use=na.or.complete)
cor(data.movie, use=complete.obs)
cor(data.movie, use="complete.obs")
cor(data.movie, use="all.obs")
which(!is.na(data.movie))
which(is.na(data.movie))
data.movie<-na.omit(data.movie)
cor(data.movie)
round(1.1)
round(1.7)
round(1.5)
round(1.4)
data.movie$rating <- factor(round(data.movie$rating))
data.movie$rating[1]
data.movie$rating[3]
data.movie$rating
data.movie <- read.csv("DataRegression.csv")
data.movie$rating
names(data.movie)
data.movie$Rating
data.movie$Rating <- factor(round(data.movie$Rating))
data.movie$Rating
rep(1:2, each=50)
library(impute)
x = matrix(rnorm(100),10,10)
x.missing = x > 1
x[x.missing] = NA
kNNImpute(x, 3)
help(package=impute)
impute.knn(x,3)
x
a = c(1,2,3)
b= c(3,4,5)
d=c(5,6,7)
l = data.frame(a,b,c)
l = data.frame(a,b,d)
l
a = c(1.1, 1.2, 1.3, 1.1, 11, 13, 11.1, 11.3, 0.9)
length(a)
b = c(8.8, 8.9, 88, 95, 86, 7.9, 7.5, 50, 33)
length(b)
d = 1:9
d
length(d)
l = data.frame(a,b,d)
l
dist(l)
f <- function(x,y) {}
f <- function(x,y) { return (x$a + x$b)}
dist(l, f)
f <- function(x,y) { return (x[0] + x[1] - y[0] - y[1])}
dist(l, f)
l
l[1]
l[,1]
l[,1][0]
print(l[,1][0])
print(l[,1][1])
f <- function(x,y) { return (x[1] + x[2] - y[1] - y[2])}
dist(l, f)
dist(l, f)
f <- function(x, y) sum(x * y)
dist(l, f)
x <- matrix(sample(c(FALSE, TRUE), 8, rep = TRUE), ncol = 2)
dist(x, f)
library(proxy)
dist(x, f)
f <- function(x,y) { return (x[1] + x[2] - y[1] - y[2])}
dist(l, f)
l
d <- c(1,1.3, 5, 7, 33, 33.1 ,7, 27, 6)
length(d)
l$d <- d
l
l[4,2]
l[4,2] <- 11
l[4,3] <- 2
l[3,3] <- 2
l
l(3,2)
l[3,2]
l[3,2] <- 9
l[3,3] <- 1.8
l
l(6,2) <- 90
l[6,2] <- 90
l
l[7,2] <- 78
l[7,3] <- 24
l
l[8,3] <- 20
l
d[3,3]
l[3,3]
l[3,3] <- NA
l
impute.knn(l, 3, )
install.packages(/Users/karama/Downloads/imputation_2.0.1.tar.gz, repos = NULL, type="source")
install.packages("/Users/karama/Downloads/imputation_2.0.1.tar.gz", repos = NULL, type="source")
install.packages('gbm')
install.packages('TimeProjection')
install.packages('locfit')
install.packages("/Users/karama/Downloads/imputation_2.0.1.tar.gz", repos = NULL, type="source")
library(imputation)
l
dist(l, f)
kNNImpute(l, 3, dist(l,f))
impute.knn(l, 3)
kNNImpute(l, 3)
dist(l, f)
l
l[3,3] <- 1.4
l
v <- l$a + l$b
v
z <- data.frame(v, l$d)
z
knn
?knn
??knn
library(class)
test <- l[3,]
test
l[3,] <- NULL
l <- l[-3]
l
l[c(-3)]
l <- l[-3,]
l
knn(l, test)
l
l = data.frame(a,b,d)
l
l[3,2] <- 9
l[4,2] <- 8.8
l
l[4,3] <- 1.8
l[3,3] <- 1.5
l
l[6,2] <- 90
l[7,2] <- 88
l
l[7,3] <- 29
;l
l
z
test <- z[3,]
test
train <- z[-3, ]
train
knn(train, test, train$l.d)
test
train
test[1,2]
test[1,2] <- NA
test
knn(train, test, train$l.d)
test[1,2] <- 90
knn(train, test, train$l.d)
test
test$l.d <- NULL
test
train
cl <- train$l.d
cl
train$l.d <- NULL
train
knn(train, test, cl, k=3)
test
l
test
test[1,1]
test[1,1] <- 91
knn(train, test, cl, k=3)
test[1,1] <- 77
knn(train, test, cl, k=3)
test[1,1] <- 20
knn(train, test, cl, k=3)
train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
train
head(iris3)
iris3
iris3[26:50,,1]
train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
test <- rbind(iris3[26:50,,1], iris3[26:50,,2], iris3[26:50,,3])
cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
knn(train, test, cl, k = 3, prob=TRUE)
attributes(.Last.value)
savehistory("~/Spbau/SL/PredictMe/classification/knn.Rhistory")
?glm
names(data.movie)
?multinom
??multinom
movies <- read.csv("DataRegression.csv")
names(movies[, -Rating])
names(movies[, -1])
names(movies[, -2])
names(movies[, -4])
names(movies[, -5])
movies <- read.csv("DataRegression.csv")
movies$Film <- NULL
movies$X.1 <- NULL
movies$X.2 <- NULL
movies$X <- NULL
movies<-na.omit(movies)
names(movies[, -5])
names(movies[, -1])
??knn
